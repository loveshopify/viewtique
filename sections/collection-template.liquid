{%- assign per_row = section.settings.per_row -%}
{%- assign paginate_by = per_row | times: section.settings.rows_per_page -%}

{% paginate collection.products by paginate_by %}

<div
  id="CollectionSection"
  data-section-id="{{ section.id }}"
  data-section-type="collection-template">

  {% if collection.description != blank %}
    <div class="rte">
      {{ collection.description }}
    </div>
    <hr class="hr--clear hr--small">
  {% endif %}

  {% if section.settings.subcollection_style == 'above' %}
    {% include 'subcollections', per_row: section.settings.subcollections_per_row %}
  {% endif %}

  <div class="collection-filter">

    <div class="collection-filter__item collection-filter__item--drawer">
      <button
        type="button"
        class="js-drawer-open-collection-filters btn btn--tertiary"
        aria-controls="FilterDrawer">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-filter" viewBox="0 0 64 64"><path d="M48 42h10M48 42a5 5 0 1 1-5-5 5 5 0 0 1 5 5zM7 42h31M16 22H6M16 22a5 5 0 1 1 5 5 5 5 0 0 1-5-5zM57 22H26"/></svg>
        <span>{{ 'collections.filters.title_tags' | t }}</span>
      </button>
    </div>

    <div class="collection-filter__item collection-filter__item--count small--hide bc-sf-filter-total-product">
      {{ 'collections.general.items_with_count' | t: count: collection.products_count }}
    </div>

    <div class="collection-filter__item collection-filter__item--sort">
      <div class="collection-filter__sort-container" id="bc-sf-filter-top-sorting">
        {% include 'bc-sf-filter-skeleton', width: 3 %}
      </div>
    </div>
  </div>
  <p class="medium-up--hide text-center bc-sf-filter-total-product"></p>
  <div class="grid grid--uniform grid--collection" id="bc-sf-filter-products" data-bc-sort="{{ collection.default_sort_by }}" data-scroll-to>
    {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}

    {% case per_row %}
    {% when 2 %}
      {%- assign grid_item_width = 'medium-up--one-half' -%}
    {% when 3 %}
      {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
    {% when 4 %}
      {%- assign grid_item_width = 'small--one-half medium-up--one-quarter' -%}
    {% when 5 %}
      {%- assign grid_item_width = 'small--one-half medium-up--one-fifth' -%}
    {% endcase %}

    {% for product in collection.products %}
      {% assign images_size = product.images | size %}
      {% if images_size != 0 %}
      	{% include 'product-grid-item' %}
      {% endif %}
    {% else %}
      <div class="grid__item">
        <p>{{ 'collections.general.no_matches' | t }}</p>
      </div>
    {% endfor %}

  </div>

  {% if section.settings.subcollection_style == 'below' %}
    {% include 'subcollections', per_row: section.settings.subcollections_per_row %}
  {% endif %}

  <div id="bc-sf-filter-bottom-pagination" class="pagination">
    {% if paginate.pages > 1 %}
      {% include 'pagination' %}
    {% endif %}
  </div>
  <div id="bc-sf-filter-load-more"></div>

  <div id="bc-sf-quick-shop-modal-container">
    {%- if settings.quick_shop_enable -%}
      {%- for product in collection.products -%}
        {%- if product.available -%}
          {%- include 'quick-shop-modal' -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
  </div>

</div>

{% endpaginate %}

<script>
  // Declare bcSfFilterConfig variable
  var bcSfFilterConfig = {
    label: {
      sorting: {% assign temp = 'collections.sorting.title' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Sorting" {% endunless %},
      sorting_best_selling: {% assign temp = 'collections.sorting.best_selling' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Best Selling" {% endunless %},
      sorting_featured: {% assign temp = 'collections.sorting.featured' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Featured" {% endunless %},
      sorting_title_ascending: {% assign temp = 'collections.sorting.az' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Alphabetically, A-Z" {% endunless %},
      sorting_title_descending: {% assign temp = 'collections.sorting.za' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Alphabetically, Z-A" {% endunless %},
      sorting_price_ascending: {% assign temp = 'collections.sorting.price_ascending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Lowest Price" {% endunless %},
      sorting_price_descending: {% assign temp = 'collections.sorting.price_descending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Highest Price" {% endunless %},
      sorting_date_ascending: {% assign temp = 'collections.sorting.date_ascending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Date, Old to New" {% endunless %},
      sorting_date_descending: {% assign temp = 'collections.sorting.date_descending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Date, New to Old" {% endunless %},
      sorting_sale_descending: {% assign temp = 'collections.sorting.sale_descending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "% Off" {% endunless %},
      sorting_relevance: {% assign temp = 'collections.sorting.relevance' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Relevance" {% endunless %},

      sold_out: {{ 'products.product.sold_out' | t | json }},
      sale: {{ 'products.general.sale' | t | json }},
      save_html: {{ 'products.general.save_html' | t | json }},
      regular_price: {{ 'products.general.regular_price' | t | json }},
      sale_price: {{ 'products.general.sale_price' | t | json }},
      from_text_html: {{ 'products.general.from_text_html' | t | json }},
      quick_shop: {{ settings.quick_shop_text | json }},
      filter: {{ 'collections.filters.title_tags' | t | json}},
      items_with_count_one: {{ 'collections.general.items_with_count.one' | t | json}},
      items_with_count_other: {{ 'collections.general.items_with_count.other' | t | json }},
    },
    custom: {
      products_per_page: {% if paginate_by %} {{ paginate_by | json }} {% else %} 24 {% endif %},
      products_per_row: {% if per_row %} {{ per_row }} {% else %} 4 {% endif %},
      grid_item_width: {% if grid_item_width != blank %} {{ grid_item_width | json }} {% else %} 'small--one-half medium-up--one-third' {% endif %},
      vendor_enable: {% if settings.vendor_enable %} {{ settings.vendor_enable | json }} {% else %} false {% endif %},
      quick_shop_enable: {% if settings.quick_shop_enable %} {{ settings.quick_shop_enable | json }} {% else %} false {% endif %},
      product_hover_image: {% if settings.product_hover_image %} {{ settings.product_hover_image | json }} {% else %} false {% endif %},
      product_grid_image_size: {% if settings.product_grid_image_size %} {{ settings.product_grid_image_size | json }} {% else %} 'natural' {% endif %},     
      enable_product_reviews:  {% if settings.enable_product_reviews %} {{ settings.enable_product_reviews | json }} {% else %} false {% endif %},
      collection_color_swatches: {% if settings.collection_color_swatches %} {{ settings.collection_color_swatches | json }} {% else %} false {% endif %},
      product_save_amount: {% if settings.product_save_amount %} {{ settings.product_save_amount | json }} {% else %} true {% endif %},
      product_save_type: {% if settings.product_save_type %} {{ settings.product_save_type | json }} {% else %} 'dollar' {% endif %},
    }
  };
</script>

{% schema %}
  {
    "name": "Collection pages",
    "settings": [
      {
        "type": "select",
        "id": "description_position",
        "label": "Collection description position",
        "default": "top",
        "options": [
          {
            "value": "top",
            "label": "Top"
          },
          {
            "value": "bottom",
            "label": "Bottom"
          }
        ]
      },
      {
        "type": "header",
        "content": "Subcollections"
      },
      {
        "type": "paragraph",
        "content": "Links to collections from your menu will appear here. [Learn more](https://archetypethemes.co/blogs/impulse/how-do-i-create-subcollections)"
      },
      {
        "type": "select",
        "id": "subcollection_style",
        "label": "Subcollection style",
        "default": "above",
        "options": [
          {
            "value": "above",
            "label": "Above products"
          },
          {
            "value": "below",
            "label": "Below products"
          },
          {
            "value": "none",
            "label": "None"
          }
        ]
      },
      {
        "type": "range",
        "id": "subcollections_per_row",
        "label": "Subcollections per row",
        "default": 5,
        "min": 2,
        "max": 5,
        "step": 1
      },
      {
        "type": "header",
        "content": "Products"
      },
      {
        "type": "checkbox",
        "id": "enable_collection_count",
        "label": "Enable collection count",
        "default": true
      },
      {
        "type": "range",
        "id": "per_row",
        "label": "Products per row",
        "default": 4,
        "min": 2,
        "max": 5,
        "step": 1
      },
      {
        "type": "range",
        "id": "rows_per_page",
        "label": "Rows per page",
        "default": 7,
        "min": 3,
        "max": 20,
        "step": 1
      },
      {
        "type": "checkbox",
        "id": "mobile_flush_grid",
        "label": "Flush grid on mobile",
        "default": false
      }
    ]
  }
{% endschema %}